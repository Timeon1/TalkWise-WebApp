---
import type { GetStaticPaths } from "astro";
import Layout from "../../layouts/Layout.astro";
import WordCard from "../../components/WordCard.astro";
import hsk1Data from "../../content/list/hsk1.json";
import hsk2Data from "../../content/list/hsk2.json";
import hsk3Data from "../../content/list/hsk3.json";
import { GET } from '../api/[type].json'

import { getCollection } from 'astro:content';


export const getStaticPaths = (async() => {
  const blogEntries = await getCollection('list');
  console.log('blogEntries222', blogEntries)
  
  return blogEntries.map(item=>({
    params: {title: item.id}
  }))
}) satisfies GetStaticPaths;

// export function getStaticPaths() {
//   return [
//     { params: { type: "hsk1", data: JSON.stringify(hsk1Data) , title: 'HSK1' } },
//     { params: { type: "hsk2", data: JSON.stringify(hsk1Data) , title: 'HSK2' } },
//     { params: { type: "hsk3", data: JSON.stringify(hsk1Data) , title: 'HSK3' } },
//   ];
// }
const { title } = Astro.params;
const data = hsk1Data
console.log(Astro.params)
// let response = await GET({params: {type: a}})
// console.log('response', response)
---

<Layout title="Welcome to Astro.">
  <main class="max-w-screen-xl">
    <div class="px-5 py-16 md:px-10 md:py-24 lg:py-25">
      <h1 class="text-3xl font-bold md:text-5xl text-center mb-10">{title}</h1>
      <p class="text-center md:text-xl text-gray-500">
        Hanyu Shuiping Kaoshi(HSK 3.0) level-1 (Beginner) words
      </p>
    </div>

    <div class="grid grid-cols-6 md:grid-cols-8">
      {data.map((item) => <WordCard title={item} href={`/word/${item}`} />)}
    </div>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
